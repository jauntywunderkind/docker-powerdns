#!/bin/sh

pdnsPreseedPg(){
	seed="${1:-${PDNS_SEED_FILE:-/opt/docker-powerdns/psql.schema.sql}}"

	# check that db is up AND prepare psql
	! command -v pdnsHealthcheckPg && SOURCE_ONLY=1 source pdns-healthcheck-pg || true
	if ! pdnsHealthcheckPg
	then
		echo "pdnsPreseedPg failed" 1>&2
		return 1
	fi

	# TODO: create database?
	# for now assume postgres operator has created it

	if [ -z "$PGSCHEMA" ] # healthcheck checks other pg params
	then
		echo "no PGSCHEMA for preseed" 1>&2
		return 1
	fi

	# needs db ownership, which we have not been passing in
	#echo "alter database ${PGDATABASE} set search_path = ${PGSCHEMA}" 1>&2

    # TODO: surely this isn't really necessary?
	echo "alter role $PGUSER set search_path = $PGSCHEMA;" | psql --no-readline --echo-errors
	echo "alter user $PGUSER in database $PGDATABASE set search_path = $PGSCHEMA;" | psql --no-readline --echo-errors

	local seeded="$(echo "select exists (select from pg_tables where schemaname = '${PGSCHEMA}' and tablename = 'domains' );" | psql -n -t)"
	if [ "${seeded## }" != t ]
	then
		psql -v ON_ERROR_STOP=1 -1 -n -f "$seed"
		return $?
	fi
}

if [ -z "$SOURCE_ONLY" ]
then
	pdnsPreseedPg $*
	return $?
fi
